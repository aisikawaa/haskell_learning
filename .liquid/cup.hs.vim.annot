1:1-1:1::Main.$trModule :: "GHC.Types.Module"
1:5-1:9::f1Oz :: "a##xo"
1:13-1:20::message :: "a##xo -> b##xo"
1:32-1:36::f1Oz :: "{VV : a##xo | VV == f1Oz}"
2:1-2:10::Main.coffeeCup :: "forall a##xo . (GHC.Integer.Type.Integer -> a##xo) -> a##xo"
2:17-2:19::lq_anf$##7205759403792802466 :: "{v : GHC.Integer.Type.Integer | v == 12}"
3:1-3:6::Main.getOz :: "forall a##xo b##xo . ((a##xo -> a##xo) -> b##xo) -> b##xo"
3:7-3:11::aCup :: "(a##xo -> a##xo) -> b##xo"
3:19-3:34::_ :: "{VV : a##xo | VV == f1Oz}"
3:21-3:25::f1Oz :: "a##xo"
5:1-5:6::Main.drink :: "forall a##xo b##xo c##xo .\n(GHC.Classes.Ord<[]> a##xo, GHC.Num.Num<[]> a##xo) =>\n((b##xo -> b##xo) -> a##xo) -> a##xo -> (a##xo -> c##xo) -> c##xo"
5:7-5:11::aCup :: "(a##xo -> a##xo) -> b##xo"
5:12-5:19::ozDrank :: "a##xo"
5:25-5:31::ozDiff :: "{VV : a##xo | VV == f1Oz - ozDrank\n              && VV == ozDiff}"
5:35-5:36::lq_anf$##7205759403792802472 :: "a##xo"
6:27-6:37::Main.cup :: "{VV : forall a##xo b##xo .\n      a##xo -> (a##xo -> b##xo) -> b##xo | VV == cup}"
6:31-6:37::ozDiff :: "{VV : a##xo | VV == f1Oz - ozDrank\n              && VV == ozDiff}"
7:27-7:32::Main.cup :: "{VV : forall a##xo b##xo .\n      a##xo -> (a##xo -> b##xo) -> b##xo | VV == cup}"
7:31-7:32::lq_anf$##7205759403792802476 :: "a##xo"
8:9-8:13::f1Oz :: "a##xo"
8:16-8:26::_ :: "a##xo"
8:22-8:26::aCup :: "(a##xo -> a##xo) -> b##xo"
9:9-9:15::ozDiff :: "{VV : a##xo | VV == f1Oz - ozDrank}"
9:18-9:22::f1Oz :: "{VV : a##xo | VV == f1Oz}"
9:25-9:32::ozDrank :: "{VV : a##xo | VV == ozDrank}"
11:1-11:8::Main.isEmpty :: "forall a##xo b##xo .\n(GHC.Classes.Eq<[]> a##xo, GHC.Num.Num<[]> a##xo) =>\n((b##xo -> b##xo) -> a##xo) -> GHC.Types.Bool"
11:9-11:13::aCup :: "(a##xo -> a##xo) -> b##xo"
11:16-11:26::lq_anf$##7205759403792802468 :: "a##xo"
11:22-11:26::aCup :: "(a##xo -> a##xo) -> b##xo"
11:30-11:31::lq_anf$##7205759403792802470 :: "a##xo"